{
  "uid" : "41e8c621dae2b160",
  "name" : "登录成功",
  "fullName" : "tests.client_songshuai.test_stulogin1#test_login",
  "historyId" : "6e23038b04ccd80c166ba7dee314e64a",
  "time" : {
    "start" : 1594283240691,
    "stop" : 1594283240831,
    "duration" : 140
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '签名错误' == 'ok'\n  - ok\n  + 签名错误",
  "statusTrace" : "datas = {'expectedmsg': 'ok', 'pwd': 123456, 'username': 13300000102}\n\n    @allure.feature(\"线下客户端登录业务\")\n    @allure.story(\"学生账号正确，密码正确登录\")\n    @allure.title(\"登录成功\")\n    @pytest.mark.parametrize(\"datas\", get_yaml_stur())\n    def test_login(datas):\n    \n        with allure.step('获得签名sign'):\n            sig = amg.get_sign(datas['username'],datas['pwd'])\n            sgi1 = str(sig)\n    \n        with allure.step('学生账号登录'):\n            url_fomal = \"https://client.songshuai.com/api/login\"\n            responses = amg.login_stu(url_fomal, datas['username'], datas['pwd'], sig=sgi1)\n            res = responses.json()\n>           assert res['msg'] == datas['expectedmsg']\nE           AssertionError: assert '签名错误' == 'ok'\nE             - ok\nE             + 签名错误\n\ntest_stulogin1.py:24: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '签名错误' == 'ok'\n  - ok\n  + 签名错误",
    "statusTrace" : "datas = {'expectedmsg': 'ok', 'pwd': 123456, 'username': 13300000102}\n\n    @allure.feature(\"线下客户端登录业务\")\n    @allure.story(\"学生账号正确，密码正确登录\")\n    @allure.title(\"登录成功\")\n    @pytest.mark.parametrize(\"datas\", get_yaml_stur())\n    def test_login(datas):\n    \n        with allure.step('获得签名sign'):\n            sig = amg.get_sign(datas['username'],datas['pwd'])\n            sgi1 = str(sig)\n    \n        with allure.step('学生账号登录'):\n            url_fomal = \"https://client.songshuai.com/api/login\"\n            responses = amg.login_stu(url_fomal, datas['username'], datas['pwd'], sig=sgi1)\n            res = responses.json()\n>           assert res['msg'] == datas['expectedmsg']\nE           AssertionError: assert '签名错误' == 'ok'\nE             - ok\nE             + 签名错误\n\ntest_stulogin1.py:24: AssertionError",
    "steps" : [ {
      "name" : "获得签名sign",
      "time" : {
        "start" : 1594283240691,
        "stop" : 1594283240691,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "学生账号登录",
      "time" : {
        "start" : 1594283240691,
        "stop" : 1594283240831,
        "duration" : 140
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert '签名错误' == 'ok'\n  - ok\n  + 签名错误\n",
      "statusTrace" : "  File \"D:\\pytest\\pytest_0613\\tests\\client_songshuai\\test_stulogin1.py\", line 24, in test_login\n    assert res['msg'] == datas['expectedmsg']\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "学生账号正确，密码正确登录"
  }, {
    "name" : "feature",
    "value" : "线下客户端登录业务"
  }, {
    "name" : "parentSuite",
    "value" : "tests.client_songshuai"
  }, {
    "name" : "suite",
    "value" : "test_stulogin1"
  }, {
    "name" : "host",
    "value" : "EZ-20180524MAOD"
  }, {
    "name" : "thread",
    "value" : "8836-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.client_songshuai.test_stulogin1"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "datas",
    "value" : "{'username': 13300000102, 'pwd': 123456, 'expectedmsg': 'ok'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "41e8c621dae2b160.json",
  "parameterValues" : [ "{'username': 13300000102, 'pwd': 123456, 'expectedmsg': 'ok'}" ]
}